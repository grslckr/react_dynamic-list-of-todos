{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onInspectClick","className","map","todo","completed","id","title","type","onClick","cn","TodoFilter","onStatusFilter","searchText","setSearchText","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","onModalShut","useState","user","setUser","href","email","name","App","setTodos","todosToRender","setTodosToRender","statusFilter","setStatusFilter","setSelectedTodo","useEffect","r","filter","text","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2611af8d.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onInspectClick: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onInspectClick,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        todo.completed\n          ? (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-success\">{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  title=\"select\"\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onInspectClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn(\n                      'far',\n                      { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                      { 'fa-eye': selectedTodo?.id !== todo.id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          )\n          : (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  title=\"select\"\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onInspectClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn(\n                      'far',\n                      { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                      { 'fa-eye': selectedTodo?.id !== todo.id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          )\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  onStatusFilter: (statusFilter: string) => void,\n  searchText: string,\n  setSearchText: (text: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onStatusFilter,\n  searchText,\n  setSearchText,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          title=\"select status\"\n          data-cy=\"statusSelect\"\n          onChange={(event) => onStatusFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchText}\n        onChange={event => setSearchText(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {searchText && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            title=\"delete\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSearchText('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  onModalShut: () => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  onModalShut,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (selectedTodo) {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedTodo || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              title=\"close\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onModalShut()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosToRender, setTodosToRender] = useState<Todo[]>([]);\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [searchText, setSearchText] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(r => {\n        setTodos(r);\n        setTodosToRender(r);\n      });\n  }, []);\n\n  useEffect(() => {\n    setTodosToRender(todos.filter(todo => {\n      const text = searchText.toLowerCase();\n\n      switch (statusFilter) {\n        case 'all':\n          return todo.title.includes(text);\n        case 'active':\n          return todo.title.includes(text)\n            && !todo.completed;\n        case 'completed':\n          return todo.title.includes(text)\n            && todo.completed;\n\n        default:\n          return false;\n      }\n    }));\n  }, [searchText, statusFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">\n              Todos:\n            </h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onStatusFilter={setStatusFilter}\n                searchText={searchText}\n                setSearchText={setSearchText}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosToRender.length\n                ? (\n                  <TodoList\n                    todos={todosToRender}\n                    selectedTodo={selectedTodo}\n                    onInspectClick={setSelectedTodo}\n                  />\n                )\n                : (<Loader />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          onModalShut={() => setSelectedTodo(null)}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}